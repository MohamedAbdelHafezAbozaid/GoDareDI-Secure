// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -warn-concurrency -warn-implicit-overrides -enable-actor-data-race-checks
import Foundation
import Swift
import SwiftUI
@_exported import Foundation

// MARK: - Core Protocols
public protocol AdvancedDIContainer {
    func register<T>(_ type: T.Type, scope: GODareDI.DependencyScope, factory: @escaping () -> T)
    func resolve<T>(_ type: T.Type) -> T
    func resolve<T>(_ type: T.Type, tag: String) -> T
    func unregister<T>(_ type: T.Type)
    func unregister<T>(_ type: T.Type, tag: String)
    func clear()
    func has<T>(_ type: T.Type) -> Bool
    func has<T>(_ type: T.Type, tag: String) -> Bool
    func getRegisteredTypes() -> [String]
    func getRegisteredTypes(for tag: String) -> [String]
}

public protocol DIModule {
    func configure(container: GODareDI.AdvancedDIContainer)
}

// MARK: - Dependency Scopes
public enum DependencyScope {
    case singleton
    case transient
    case scoped
    case application
    case session
    case request
}

// MARK: - Storage Keys
public enum StorageKey {
    case token
    case phoneNumber
    case authorization
}

// MARK: - Main Container
public class GODareDIContainer : GODareDI.AdvancedDIContainer {
    public init()
    public func register<T>(_ type: T.Type, scope: GODareDI.DependencyScope, factory: @escaping () -> T)
    public func resolve<T>(_ type: T.Type) -> T
    public func resolve<T>(_ type: T.Type, tag: String) -> T
    public func unregister<T>(_ type: T.Type)
    public func unregister<T>(_ type: T.Type, tag: String)
    public func clear()
    public func has<T>(_ type: T.Type) -> Bool
    public func has<T>(_ type: T.Type, tag: String) -> Bool
    public func getRegisteredTypes() -> [String]
    public func getRegisteredTypes(for tag: String) -> [String]
}

// MARK: - SPM Initialization Helpers
public struct SPMInitialization {
    public static func initialize() -> GODareDI.GODareDIContainer
    public static func configureDefaultModules(container: GODareDI.AdvancedDIContainer)
}

// MARK: - Dependency Graph Visualization
@available(iOS 13.0, *)
public struct DependencyGraphView: SwiftUI.View {
    public init(container: GODareDI.AdvancedDIContainer)
    public var body: some SwiftUI.View { get }
}

// MARK: - Error Handling
public enum DIError: Error {
    case registrationFailed
    case resolutionFailed
    case typeNotFound
    case invalidScope
}

// MARK: - Analytics (Optional)
public protocol AnalyticsProvider {
    func track(event: String, properties: [String: Any]?)
}

public class DefaultAnalyticsProvider: GODareDI.AnalyticsProvider {
    public init()
    public func track(event: String, properties: [String: Any]?)
}